"""
5585번 : 거스름돈
문제를 보면 주어진 N킬로그램 설탕을 5, 3짜리로 나누어서 최소한의 갯수를 묻고 있다
조금만 생각해보면 3, 5는 1개에서 파생되면서 더해지는 숫자들이 존재한다
3+3=6, 3+5=8, 5+3=8, 5+5=10... 이런식으로 더해지는 설탕의 무게가 존재할 것이고 반복적으로 이어져 나가면서 작은 것을 저장해주면 된다
dynamic programming이라고 볼 수 있으며 다항식으로 표현해보면 i번째에서 mem[i] = min(mem[i-3] + 1, mem[i-5] + 1] 로 생각해 줄 수 있지만
5와 3으로 나눠지지 않는 친구들은 계속해서 -1 일 것이다
따라서 조건문으로 mem[i-3], mem[i-5]의 곱의 부호를 봐서 음수이면 둘 중에 -1이 아닌 항에 +1 한 값을 저장,
양수이면 다시 2개로 생각 할 수 있는데 mem[i-3], mem[i-5]가 일정 설탕 갯수가 있는 경우와 둘다 -1로 5와 3으로 해도 안되는 경우 들이 있다
전자의 경우 위의 점화식처럼 둘 중에 최솟값 + 1 한값을 저장하고, 후자의 경우 그냥 -1을 넣어주면 된다
bottom-up 방식으로 풀면 된다
"""
import sys
N = int(sys.stdin.readline())
mem = [-1 for _ in range(N+5)]
mem[3], mem[5] = 1, 1  # 초기값 세팅
if N > 5:
    for i in range(6,N+1):
        if mem[i-3]*mem[i-5] < 0 :
            mem[i] = max(mem[i-3] + 1, mem[i-5] + 1)
        else:
            if mem[i-3] == -1 or mem[i-5] == -1:
                mem[i] = max(mem[i-3], mem[i-5])
            else:
                mem[i] = min(mem[i-3] + 1, mem[i-5] + 1)
print(mem[N])